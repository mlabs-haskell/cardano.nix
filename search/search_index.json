{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About the Project","text":"<p><code>cardano.nix</code> is a collection of Nix packages and NixOS modules designed to make it easy to operate Cardano related services and infrastructure.</p>"},{"location":"#why","title":"Why?","text":"<p>Nix is a declarative package manager ensuring hash-based dependency pinning and reproducible builds. NixOS is a Linux distribution with a declarative configuration system providing atomic updates and rollbacks. These features are responsible for the increased reliability of a NixOS system, making it an attractive DevOps toolset for deploying Cardano services.</p>"},{"location":"#what","title":"What?","text":"<p>The <code>cardano.nix</code> project aims to provide NixOS modules for Cardano services such as <code>cardano-node</code>, <code>ogmios</code>, <code>kupo</code>, <code>cardano-db-sync</code>, as well as auxiliary modules such as firewall and HTTP(S), making it easy to deploy these services in production. Very little configuration is needed to run the services with sane defaults that are easy to customize. The services can be run on the same host or in a distributed cluster, and a HTTPS proxy module is also provided.</p>"},{"location":"#how","title":"How?","text":"<p>Here are some motivating examples.</p> <p>This NixOS configuration will start <code>cardano-node</code> and related services on the <code>preview</code> testnet.</p> <pre><code>{\ncardano = {\nenable = true;\nnetwork = \"preview\";\n};\n}\n</code></pre> <p>This snippet will configure a HTTPS reverse proxy and load balancer with ACME certificates from Let's Encrypt. DNS records need to be set up and the backend servers (configured as above) need to be reachable.</p> <pre><code>{\n  cardano.http.enable = true;\n  services.http-proxy = {\ndomainName = \"preview.example.com\";\n    https.enable = true;\nservers = [\"server1\" \"server2\"];\n};\n};\n</code></pre> <p>Configurations including the above can be deployed to a laptop, a virtual machine, a cloud instance, a container, or any other system running NixOS. Example configurations and shortcuts to run virtual machines are provided as part of the project.</p>"},{"location":"license/","title":"License","text":"<p>Apache License Version 2.0, January 2004 http://www.apache.org/licenses/</p>"},{"location":"license/#terms-and-conditions-for-use-reproduction-and-distribution","title":"TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION","text":"<p>1- Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.</p> <p>2- Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.</p> <p>3- Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.</p> <p>4- Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.</p> <p>5- Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.</p> <p>6- Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.</p> <p>7- Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p> <p>8- Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.</p> <p>9- Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.</p> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <p>To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.</p> <p>Copyright 2023 MLabs ltd, and cardano.nix contributors.</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <p>http://www.apache.org/licenses/LICENSE-2.0</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"development/contributing/","title":"Contributing","text":"<p>There are several ways you can contribute.</p>"},{"location":"development/contributing/#reporting-issues","title":"Reporting issues","text":"<ul> <li>Search the issue tracker before creating a new issue</li> <li>Provide detailed steps to reproduce the issue</li> <li>Include as much information as possible</li> </ul>"},{"location":"development/contributing/#proposing-features","title":"Proposing features","text":"<ul> <li>Use the issue tracker to propose new features</li> <li>Feel free to also propose a PR implementing it</li> </ul>"},{"location":"development/contributing/#code-style-guidelines","title":"Code style guidelines","text":"<ul> <li>Format everything with <code>nix fmt .</code></li> </ul>"},{"location":"development/contributing/#checks","title":"Checks","text":"<ul> <li>You can verify that all checks pass with <code>nix flake check</code></li> </ul> <p>Thank you for contributing to <code>cardano.nix</code>! Your help is greatly appreciated \ud83d\ude0a</p>"},{"location":"development/develop/","title":"Develop","text":"<p>Development is supported on linux systems. Virtual machines are run with <code>qemu</code> so <code>kvm</code> is recommended. Follow the installation guide to set up nix.</p>"},{"location":"development/develop/#development-shell","title":"Development Shell","text":"<p><code>cardano.nix</code> provides a devshell that includes various tools to build, test, run and update the project:</p> <pre><code>$ nix develop\n...\n\u2744\ufe0f Welcome to the cardano.nix devshell \u2744\ufe0f\n\n[documentation]\n\n  docs-build              - build documentation\n  docs-serve              - serve documentation web page\n\n[examples]\n\n  vm-preview              - Start vm with cardano services on the preview network and ports forwarded to host\n\n[general commands]\n\n  menu                    - prints this menu\n\n[tests]\n\n  build-all               - build all packages and checks with `devour-flake`\n  check                   - run `nix flake check`\n  run-vm-test             - list and run virtual machine integration tests\n\n[tools]\n\n  fmt                     - format the source tree\n  update-pre-commit-hooks - update git pre-commit hooks\n</code></pre> <p>A <code>.envrc</code> file is also provided, using direnv and nix-direnv is suggested.</p>"},{"location":"development/develop/#running-integration-tests","title":"Running Integration Tests","text":"<p>From the devshell you can run integration tests with <code>run-vm-test</code>, for example the following will start <code>cardano-node</code> and <code>ogmios</code> on the <code>preview</code> testnet and will check for synchronization progress.</p> <pre><code>run-vm-test ogmios\n</code></pre>"},{"location":"getting-started/deploy/","title":"Deploy","text":"<p>In order to access all the options available in <code>cardano.nix</code>, the NixOS module provided by this project has to be included in a NixOS configuration and deployed to a (local or remote or virtual) machine.</p>"},{"location":"getting-started/deploy/#start-new-project-with-flake-template","title":"Start new project with flake template","text":"<p>An easy way to get started is to use the flake template provided by this project. Here's how to start a new project using the template:</p> <pre><code>mkdir myproject\ncd myproject\nnix flake init --template github:mlabs-haskell/cardano.nix\ngit init\ngit add .\n</code></pre>"},{"location":"getting-started/deploy/#run-a-virtual-machine","title":"Run a virtual machine","text":"<p>The default template provides a virtual machine configuration starting all the services in the preview testnet. Here's how to run it:</p> <p><code>nix run .#vm</code></p> <p>This machine is set up just like the one in Run a VM, but can be customized.</p>"},{"location":"getting-started/deploy/#look-around","title":"Look around","text":""},{"location":"getting-started/deploy/#flakenix","title":"<code>flake.nix</code>","text":"<p>This Nix Flake is the entry point to the project. It locks inputs and provides the following inputs:</p> <ul> <li>a NixOS configuration for the virtual machine, under <code>nixosConfigurations.server-vm</code></li> <li>an app to run the virtual machine as above, under <code>apps.x86_64-linux.server-vm</code></li> </ul>"},{"location":"getting-started/deploy/#previewnix","title":"<code>preview.nix</code>","text":"<p>This is the NixOS configuration to run cardano services for the machine.</p>"},{"location":"getting-started/deploy/#vmnix","title":"<code>vm.nix</code>","text":"<p>This NixOS configuration sets virtual machine options such as cores, memory and port forwarding. It is included in the configuration for the <code>nixosConfigurations.server-vm</code> virtual machine in <code>flake.nix</code>.</p>"},{"location":"getting-started/deploy/#customize","title":"Customize","text":"<p>To learn more, browse available NixOS options in nixpkgs and NixOS options provided by cardano.nix (see other modules in the menu on the left). You can ad these options to <code>preview.nix</code> to configure the system.</p>"},{"location":"getting-started/deploy/#deployment-options","title":"Deployment options","text":"<p>The configuration can be deployed to any target running NixOS, such as:</p> <ul> <li>cloud hosts on AWS, DigitalOcean or any other cloud provider</li> <li>physical machines</li> <li>NixOS containers</li> </ul> <p>There are a variety of resources to help install NixOS:</p> <ul> <li>the official documentation installation guide</li> <li>https://nix-community.github.io/nixos-anywhere/quickstart.html to deploy on existing hosts running other distrbutions</li> <li>various web resources for specific cloud providers or other circumstances</li> </ul> <p>With a running NixOS installation and a NixOS configuration <code>server</code> in a nix flake, this command will deploy the server:</p> <p><code>nixos-rebuild switch --flake .#server --target-host &lt;target&gt;</code></p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<ul> <li>linux</li> <li>nix</li> <li>kvm (optional, for running virtual machine tests)</li> </ul>"},{"location":"getting-started/installation/#setup","title":"Setup","text":"<p>Follow this guide to Install nix with flakes enabled.</p>"},{"location":"getting-started/installation/#binary-cache","title":"Binary cache","text":"<p>You can optionally use this project's binary cache to skip building software and download it instead. Edit <code>/etc/nix/nix.conf</code> (or related settings in NixOS config) and merge the new values separated by spaces into the options:</p> <pre><code>substituters = ... https://cache.staging.mlabs.city/cardano-nix\ntrusted-public-keys = ... cardano-nix:BQ7QKgoQQAuL3Kh6pfIJ8oxrihUbUSxf6tN9SxyW608=\n</code></pre> <p>Don't edit <code>~/.config/nix/nix.conf</code> in your home directory. Don't add users to <code>trusted-users</code> because it is insecure.</p>"},{"location":"getting-started/installation/#check-that-it-works","title":"Check that it works","text":"<p><code>nix --version</code></p>"},{"location":"getting-started/installation/#learn-more","title":"Learn more","text":"<p>For an introduction to the Nix ecosystem, check out Zero to Nix. Learn more about Nix flakes and NixOS.</p>"},{"location":"getting-started/vm/","title":"Run a VM","text":"<p>This project provides a virtual machine configuration with all cardano services.</p> <p><code>nix run github:mlabs-haskell/cardano.nix#vm-preview</code></p> <p>A virtual machine will be started with the following services, and the following ports forwarded from the host to the VM.</p> Service Port cardano-node 3001 ogmios 1337 kupo 1442 <p>You can log in with user <code>root</code>. The password is empty. In the virtual machine, <code>cardano-cli</code> is available to query the node.</p> <p><code>cardano-cli query tip --testnet-magic 2</code></p>"},{"location":"reference/module-options/cardano/","title":"Cardano","text":""},{"location":"reference/module-options/cardano/#cardanoenable","title":"cardano.enable","text":"<p>Whether to enable all Cardano services and HTTP proxy.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/cardano.nix</p>"},{"location":"reference/module-options/cardano/#cardanonetwork","title":"cardano.network","text":"<p>Cardano network to operate on.</p> <p>Type: one of \u201cmainnet\u201d, \u201cpreprod\u201d, \u201cpreview\u201d, \u201cprivate\u201d, \u201csanchonet\u201d</p> <p>Default: <code>\"mainnet\"</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/cardano.nix</p>"},{"location":"reference/module-options/cardano/#cardanonetworknumber","title":"cardano.networkNumber","text":"<p>Cardano network number to operate on. Defaults to the network number of the selected network. Internal: true</p> <p>Type: signed integer</p> <p>Default: <code>config.cardano.networkNumbers.${config.cardano.net}</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/cardano.nix</p>"},{"location":"reference/module-options/cardano/#cardanonetworknumbers","title":"cardano.networkNumbers","text":"<p>Map from network names to network numbers. Selected network must be present in the map Internal: true</p> <p>Type: attribute set of signed integer</p> <p>Default:</p> <pre><code>{\n  mainnet = 764824073;\n  preprod = 1;\n  preview = 2;\n  private = 42;\n  sanchonet = 4;\n}\n</code></pre> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/cardano.nix</p>"},{"location":"reference/module-options/cli/","title":"Cli","text":""},{"location":"reference/module-options/cli/#cardanoclienable","title":"cardano.cli.enable","text":"<p>Add cardano-cli to \u2018environment.systemPackages\u2019.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/cli.nix</p>"},{"location":"reference/module-options/http/","title":"Http","text":""},{"location":"reference/module-options/http/#cardanohttpenable","title":"cardano.http.enable","text":"<p>Whether to enable HTTP SSL proxy and load balancer for cardano services.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/http.nix</p>"},{"location":"reference/module-options/kupo/","title":"Kupo","text":""},{"location":"reference/module-options/kupo/#cardanokupoenable","title":"cardano.kupo.enable","text":"<p>Whether to enable Kupo chain-indexer.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/kupo.nix</p>"},{"location":"reference/module-options/node/","title":"Node","text":""},{"location":"reference/module-options/node/#cardanonodeenable","title":"cardano.node.enable","text":"<p>Whether to enable cardano-node service.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/node.nix</p>"},{"location":"reference/module-options/node/#cardanonodeconfigpath","title":"cardano.node.configPath","text":"<p>Path to cardano-node configuration.</p> <p>Type: path</p> <p>Default: <code>${pkgs.cardano-configurations}/network/${config.cardano.network}_p2p/cardano-node/config.json</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/node.nix</p>"},{"location":"reference/module-options/node/#cardanonodesocketpath","title":"cardano.node.socketPath","text":"<p>Path to cardano-node socket.</p> <p>Type: path</p> <p>Default: <code>\"/run/cardano-node/node.socket\"</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/node.nix</p>"},{"location":"reference/module-options/ogmios/","title":"Ogmios","text":""},{"location":"reference/module-options/ogmios/#cardanoogmiosenable","title":"cardano.ogmios.enable","text":"<p>Whether to enable Ogmios bridge interface for cardano-node.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/cardano.nix/tree/main/modules/ogmios.nix</p>"}]}